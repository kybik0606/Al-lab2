# Импортируем модель

# Шаг 1: Загрузка данных
iris = load_iris()
df = pd.DataFrame(iris.data, columns=iris.feature_names)
print(df.info())
df['target'] = iris.target

# Шаг 2: Подготовка данных
X = df.drop(columns=['target'])
y = df['target']

# Разделяем данные на обучающую и тестовую выборки (80% и 20% соответственно)
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# Шаг 3: Инициализация модели
model = LogisticRegression(max_iter=1000)  # Увеличим количество итераций для сходимости

# Шаг 4: Обучение модели
model.fit(X_train, y_train)

# Шаг 5: Предсказания на тестовой выборке
y_pred = model.predict(X_test)

# Шаг 6: Оценка точности
accuracy = accuracy_score(y_test, y_pred)
print(f'Accuracy: {accuracy:.2f}')

# Шаг 7: Матрица ошибок
cm = confusion_matrix(y_test, y_pred)

# Визуализация матрицы ошибок
plt.figure(figsize=(8,6))
sns.heatmap(cm, annot=True, cmap='Blues', fmt='d', xticklabels=iris.target_names, yticklabels=iris.target_names)
plt.xlabel('Предсказанный класс')
plt.ylabel('Истинный класс')
plt.title('Матрица ошибок')

plt.show()

